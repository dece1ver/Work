<Window x:Class="remeLog.Views.EditOperatorsWindow"
        xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
        xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
        xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
        xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
        xmlns:local="clr-namespace:remeLog.Views"
        xmlns:cmd="clr-namespace:remeLog.Infrastructure.Commands"
        xmlns:vm="clr-namespace:remeLog.ViewModels"
        mc:Ignorable="d" WindowStartupLocation="CenterOwner"
        Title="EditOperatorsWindow" Height="800" Width="600">
    <Window.DataContext>
        <vm:EditOperatorsWindowViewModel/>
    </Window.DataContext>
    <Grid>
        <Grid.RowDefinitions>
            <RowDefinition Height="*"/>
            <RowDefinition Height="Auto"/>
            <RowDefinition Height="Auto"/>
        </Grid.RowDefinitions>

        <DataGrid Grid.Row="0" Name="EmployeesDataGrid" AutoGenerateColumns="False" ItemsSource="{Binding Operators}" 
                  AlternatingRowBackground="#01D3D3D3" VerticalGridLinesBrush="LightGray" HorizontalGridLinesBrush="LightGray"
                  CanUserAddRows="True" CanUserDeleteRows="True" PreviewKeyDown="EmployeesDataGrid_PreviewKeyDown">
            <DataGrid.Resources>
                <Style TargetType="{x:Type DataGridRow}">
                    <Setter Property="Background" Value="Transparent" />
                    <Setter Property="BorderBrush" Value="Transparent" />
                    <Style.Triggers>
                        <Trigger Property="IsMouseOver" Value="True">
                            <Setter Property="Background" Value="White"/>
                        </Trigger>
                        <Trigger Property="IsSelected" Value="True">
                            <Setter Property="Background" Value="White"/>
                            <Setter Property="BorderBrush" Value="Transparent"/>
                            <Setter Property="Foreground" Value="{DynamicResource {x:Static SystemColors.ControlTextBrushKey}}"/>
                        </Trigger>
                    </Style.Triggers>
                </Style>
                <Style TargetType="{x:Type DataGridCell}">
                    <Setter Property="BorderBrush" Value="Transparent" />
                    <Style.Triggers>
                        <Trigger Property="IsSelected" Value="True">
                            <Setter Property="Background" Value="Transparent" />
                            <Setter Property="BorderBrush" Value="Transparent" />
                            <Setter Property="Foreground" Value="{DynamicResource {x:Static SystemColors.ControlTextBrushKey}}"/>
                        </Trigger>
                    </Style.Triggers>
                </Style>
            </DataGrid.Resources>
            <DataGrid.Columns>
                <DataGridTextColumn Header="Фамилия" 
                    Binding="{Binding LastName, ValidatesOnDataErrors=True, UpdateSourceTrigger=PropertyChanged}"
                    Width="*" >
                    <DataGridTextColumn.ElementStyle>
                        <Style TargetType="TextBlock">
                            <Style.Triggers>
                                <DataTrigger Binding="{Binding IsModified}" Value="True">
                                    <Setter Property="Foreground" Value="Blue"/>
                                </DataTrigger>
                            </Style.Triggers>
                        </Style>
                    </DataGridTextColumn.ElementStyle>
                </DataGridTextColumn>
                <DataGridTextColumn Header="Имя" 
                                    Binding="{Binding FirstName, ValidatesOnDataErrors=True, UpdateSourceTrigger=PropertyChanged}"
                                    Width="*" >
                    <DataGridTextColumn.ElementStyle>
                        <Style TargetType="TextBlock">
                            <Style.Triggers>
                                <DataTrigger Binding="{Binding IsModified}" Value="True">
                                    <Setter Property="Foreground" Value="Blue"/>
                                </DataTrigger>
                            </Style.Triggers>
                        </Style>
                    </DataGridTextColumn.ElementStyle>
                </DataGridTextColumn>
                <DataGridTextColumn Header="Отчество" 
                    Binding="{Binding Patronymic, ValidatesOnDataErrors=True, UpdateSourceTrigger=PropertyChanged}"
                    Width="*" >
                    <DataGridTextColumn.ElementStyle>
                        <Style TargetType="TextBlock">
                            <Style.Triggers>
                                <DataTrigger Binding="{Binding IsModified}" Value="True">
                                    <Setter Property="Foreground" Value="Blue"/>
                                </DataTrigger>
                            </Style.Triggers>
                        </Style>
                    </DataGridTextColumn.ElementStyle>
                </DataGridTextColumn>
                <DataGridTextColumn Header="Разряд" 
                                    Binding="{Binding Qualification, ValidatesOnDataErrors=True, UpdateSourceTrigger=PropertyChanged}"
                                    Width="Auto">
                    <DataGridTextColumn.ElementStyle>
                        <Style TargetType="TextBlock">
                            <Style.Triggers>
                                <DataTrigger Binding="{Binding IsModified}" Value="True">
                                    <Setter Property="Foreground" Value="Blue"/>
                                </DataTrigger>
                            </Style.Triggers>
                        </Style>
                    </DataGridTextColumn.ElementStyle>
                </DataGridTextColumn>

                <DataGridCheckBoxColumn Header="Активен" 
                                        Binding="{Binding IsActive}" 
                                        Width="Auto" />
            </DataGrid.Columns>
        </DataGrid>

        <Button Grid.Row="1" Content="Записать" Width="100" Height="30" Margin="10" HorizontalAlignment="Right" IsEnabled="{Binding IsSaveEnabled}" Command="{Binding SaveOperatorsCommand}"/>

        <StatusBar Grid.Row="2">
            <StatusBarItem>
                <TextBlock Text="{Binding Status}"/>
            </StatusBarItem>
        </StatusBar>
    </Grid>
</Window>
