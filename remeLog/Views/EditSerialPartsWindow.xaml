<Window x:Class="remeLog.Views.EditSerialPartsWindow"
        x:Name="editSerialPartsWindow"
        xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
        xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
        xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
        xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
        xmlns:local="clr-namespace:remeLog.Views"
        xmlns:cnt="clr-namespace:remeLog.Views.Controls"
        xmlns:cmd="clr-namespace:remeLog.Infrastructure.Commands"
        xmlns:vm="clr-namespace:remeLog.ViewModels"
        xmlns:lm="clr-namespace:libeLog.Models;assembly=libeLog"
        mc:Ignorable="d" WindowStartupLocation="CenterOwner" 
        Title="Редактирование списка серийных деталей" Height="810" Width="500" ResizeMode="CanMinimize" Closing="editSerialPartsWindow_Closing">
    <Window.DataContext>
        <vm:EditSerialPartsWindowViewModel/>
    </Window.DataContext>
    <Window.Resources>
        <Style TargetType="TextBox">
            <Setter Property="Height" Value="25"/>
            <Setter Property="VerticalContentAlignment" Value="Center"/>
        </Style>
        <ContextMenu x:Key="EditingTextBoxContextMenu">
            <MenuItem Header="Добавить операцию"
                      Command="{Binding DataContext.AddOperationCommand, Source={x:Reference editSerialPartsWindow}}"
                      CommandParameter="{Binding PlacementTarget.DataContext, RelativeSource={RelativeSource AncestorType=ContextMenu}}" />
            <Separator/>
            <MenuItem Header="Копировать" Command="ApplicationCommands.Copy" />
            <MenuItem Header="Вырезать" Command="ApplicationCommands.Cut" />
            <MenuItem Header="Вставить" Command="ApplicationCommands.Paste" />
            <MenuItem Header="Выделить все" Command="ApplicationCommands.SelectAll" />
            <MenuItem Header="Удалить деталь"
                      Command="{Binding DataContext.DeletePartCommand, Source={x:Reference editSerialPartsWindow}}"
                      CommandParameter="{Binding PlacementTarget.DataContext, RelativeSource={RelativeSource AncestorType=ContextMenu}}" />
        </ContextMenu>
        
        <ContextMenu x:Key="CncOperationContextMenu">
            <MenuItem Header="Добавить установ"
                      Command="{Binding DataContext.AddSetupCommand, Source={x:Reference editSerialPartsWindow}}"
                      CommandParameter="{Binding PlacementTarget.DataContext, RelativeSource={RelativeSource AncestorType=ContextMenu}}" />
            <Separator/>
            <MenuItem Header="Переименовать операцию"
                      Command="{Binding DataContext.RenameOperationCommand, Source={x:Reference editSerialPartsWindow}}"
                      CommandParameter="{Binding PlacementTarget, RelativeSource={RelativeSource AncestorType=ContextMenu}}" />
            <MenuItem Header="Удалить операцию"
                      Command="{Binding DataContext.DeleteOperationCommand, Source={x:Reference editSerialPartsWindow}}"
                      CommandParameter="{Binding PlacementTarget, RelativeSource={RelativeSource AncestorType=ContextMenu}}" />
        </ContextMenu>

        <ContextMenu x:Key="CncSetupContextMenu">
            <MenuItem Header="Изменить норматив наладки"
                      Command="{Binding DataContext.SetNewSetupNormativeCommand, Source={x:Reference editSerialPartsWindow}}"
                      CommandParameter="{Binding PlacementTarget, RelativeSource={RelativeSource AncestorType=ContextMenu}}"/>
            <MenuItem Header="Изменить норматив изготовления"
                      Command="{Binding DataContext.SetNewProductionNormativeCommand, Source={x:Reference editSerialPartsWindow}}"
                      CommandParameter="{Binding PlacementTarget, RelativeSource={RelativeSource AncestorType=ContextMenu}}"/>
            <Separator/>
            <MenuItem Header="Удалить установ"
                      Command="{Binding DataContext.DeleteSetupCommand, Source={x:Reference editSerialPartsWindow}}"
                      CommandParameter="{Binding PlacementTarget, RelativeSource={RelativeSource AncestorType=ContextMenu}}"/>
        </ContextMenu>

        <ContextMenu x:Key="CncNormativeContextMenu">
            <MenuItem Header="Удалить норматив"
                      Command="{Binding DataContext.RemoveNormativeCommand, Source={x:Reference editSerialPartsWindow}}"
                      CommandParameter="{Binding PlacementTarget, RelativeSource={RelativeSource AncestorType=ContextMenu}}"/>
        </ContextMenu>
    </Window.Resources>
    <Grid>
        <DockPanel>
            <Grid DockPanel.Dock="Top" Margin="0 0 0 -1">
                <Grid.ColumnDefinitions>
                    <ColumnDefinition Width="21"/>
                    <ColumnDefinition Width="340"/>
                    <ColumnDefinition Width="100"/>
                </Grid.ColumnDefinitions>
                <Button Grid.Column="0" Content="{StaticResource SyncIcon}" Margin="-1 0 0 0" Background="Transparent"
                Command="{Binding LoadPartsCommand}"/>
                <TextBox Grid.Column="1" Text="Наименование" Margin="-1 0 0 0" BorderBrush="Gray" IsReadOnly="False"/>
                <TextBox Grid.Column="2" Text="Годовой план" Margin="-1 0 -1 0" BorderBrush="Gray" IsReadOnly="False"/>
            </Grid>
            <StatusBar DockPanel.Dock="Bottom">
                <StatusBarItem>
                    <TextBlock Text="{Binding Status}"/>
                </StatusBarItem>
            </StatusBar>
            <Button DockPanel.Dock="Bottom" Content="Записать"  Command="{Binding SaveSerialPartsCommand}"
            IsEnabled="True" Width="100" Margin="5" 
            HorizontalAlignment="Right" Height="40" Style="{StaticResource LvButton}"/>
            <TreeView ItemsSource="{Binding SerialParts}" BorderThickness="0 1 0 1" Margin="0 0 0 0">
                <TreeView.Resources>
                    <HierarchicalDataTemplate DataType="{x:Type lm:SerialPart}"
                                      ItemsSource="{Binding Operations}">
                        <Grid>
                            <Grid.ColumnDefinitions>
                                <ColumnDefinition Width="340"/>
                                <ColumnDefinition Width="100"/>
                            </Grid.ColumnDefinitions>
                            <TextBox Grid.Column="0" Text="{
                        Binding PartName, 
                        UpdateSourceTrigger=PropertyChanged, 
                        ValidatesOnDataErrors=True, 
                        NotifyOnValidationError=True}" Margin="-1 -1 -1 0" 
                             VerticalContentAlignment="Center"
                             ContextMenu="{StaticResource EditingTextBoxContextMenu}">
                                <TextBox.Style>
                                    <Style TargetType="TextBox">
                                        <Style.Triggers>
                                            <DataTrigger Binding="{Binding IsModified}" Value="True">
                                                <Setter Property="Foreground" Value="Blue"/>
                                            </DataTrigger>
                                        </Style.Triggers>
                                    </Style>
                                </TextBox.Style>
                            </TextBox>
                            <TextBox Grid.Column="1" Text="{
                        Binding YearCount, 
                        UpdateSourceTrigger=PropertyChanged, 
                        ValidatesOnDataErrors=True, 
                        NotifyOnValidationError=True}" Margin="-1 -1 -1 0">
                                <TextBox.Style>
                                    <Style TargetType="TextBox">
                                        <Style.Triggers>
                                            <DataTrigger Binding="{Binding IsModified}" Value="True">
                                                <Setter Property="Foreground" Value="Blue"/>
                                            </DataTrigger>
                                        </Style.Triggers>
                                    </Style>
                                </TextBox.Style>
                            </TextBox>
                        </Grid>
                    </HierarchicalDataTemplate>
                    <HierarchicalDataTemplate DataType="{x:Type lm:CncOperation}"
                                      ItemsSource="{Binding Setups}">
                        <TextBlock Text="{Binding Name}" ContextMenu="{StaticResource CncOperationContextMenu}" HorizontalAlignment="Left"/>
                    </HierarchicalDataTemplate>
                    <HierarchicalDataTemplate DataType="{x:Type lm:CncSetup}" ItemsSource="{Binding NormativesHistory}">
                        <Grid>
                            <Grid.ColumnDefinitions>
                                <ColumnDefinition Width="302"/>
                                <ColumnDefinition Width="100"/>
                            </Grid.ColumnDefinitions>
                            <StackPanel Orientation="Horizontal" ContextMenu="{StaticResource CncSetupContextMenu}">
                                <TextBlock Text="{Binding Number}"/>
                                <TextBlock Text=" установка"/>
                                <TextBlock Text=" ― Наладка: "/>
                                <TextBlock Visibility="{Binding LastSetupNormative.IsApproved, Converter={StaticResource VisibilityConverter}}" Text="{Binding LastSetupNormative.Value, Mode=OneWay}" FontWeight="Bold"/>
                                <TextBlock Visibility="{Binding LastSetupNormative.IsApproved, Converter={StaticResource InvertedVisibilityConverter}}" Text="{Binding LastSetupNormative.Value, Mode=OneWay}"/>
                                <TextBlock Text=", Изготовление: "/>
                                <TextBlock Visibility="{Binding LastProductionNormative.IsApproved, Converter={StaticResource VisibilityConverter}}" Text="{Binding LastProductionNormative.Value, Mode=OneWay}" FontWeight="Bold"/>
                                <TextBlock Visibility="{Binding LastProductionNormative.IsApproved, Converter={StaticResource InvertedVisibilityConverter}}" Text="{Binding LastProductionNormative.Value, Mode=OneWay}"/>
                            </StackPanel>
                        </Grid>
                    </HierarchicalDataTemplate>
                    <HierarchicalDataTemplate DataType="{x:Type lm:NormativeEntry}">
                        <StackPanel Orientation="Horizontal" ContextMenu="{StaticResource CncNormativeContextMenu}">
                            <TextBlock Text="[" />
                            <TextBlock Text="{Binding EffectiveFrom, StringFormat=dd.MM.yyyy HH:mm}"/>
                            <TextBlock Text="] " />
                            <TextBlock Text="{Binding NormativeTypeDisplay}" FontStyle="Italic"/>
                            <TextBlock Text=": "/>
                            <TextBlock Visibility="{Binding IsApproved, Converter={StaticResource VisibilityConverter}}" Text="{Binding Value, StringFormat=N2}" FontWeight="Bold"/>
                            <TextBlock Visibility="{Binding IsApproved, Converter={StaticResource InvertedVisibilityConverter}}" Text="{Binding Value, StringFormat=N2}"/>
                        </StackPanel>
                    </HierarchicalDataTemplate>
                </TreeView.Resources>
                <TreeView.ItemContainerStyle>
                    <Style TargetType="TreeViewItem">
                        <EventSetter Event="PreviewMouseMove" Handler="TreeViewItem_PreviewMouseMove"/>
                        <EventSetter Event="PreviewMouseLeftButtonDown" Handler="TreeViewItem_PreviewMouseLeftButtonDown"/>
                        <EventSetter Event="DragOver" Handler="TreeViewItem_DragOver"/>
                        <EventSetter Event="Drop" Handler="TreeViewItem_Drop"/>
                        <EventSetter Event="DragLeave" Handler="TreeViewItem_DragLeave"/>
                        <Setter Property="AllowDrop" Value="True"/>
                    </Style>
                </TreeView.ItemContainerStyle>
            </TreeView>
        </DockPanel>
        <cnt:LoadingOverlay d:Visibility="Collapsed" Visibility="{Binding InProgress, Converter={StaticResource VisibilityConverter}}"/>
    </Grid>
</Window>
